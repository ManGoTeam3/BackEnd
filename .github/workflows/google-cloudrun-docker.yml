name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - "develop"
      - "main"
  pull_request:
    branches:
      - "develop"
      - "main"


env:
  PROJECT_ID: "poetic-inkwell-401203" # TODO: update Google Cloud project id
  GAR_LOCATION: "asia-northeast3" # TODO: update Artifact Registry location
  SERVICE: "mangohub" # TODO: update Artifact Registry service name
  DEPLOYMENT: "mangoflow" # TODO: update Cloud Run deployment name
  REGION: "us-central1" # TODO: update Cloud Run service region

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}' # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}' # e.g. - my-service-account@my-project.iam.gserviceaccount.com

      # NOTE: Alternative option - authentication via credentials json
      # - name: Google Auth
      #   id: auth
      #   uses: 'google-github-actions/auth@v0'
      #   with:
      #     credentials_json: '${{ secrets.GCP_CREDENTIALS }}''

      # BEGIN - Docker auth and build (NOTE: If you already have a container image, these Docker steps can be omitted)

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

      - name: Build and Push Container
        env:
          MY_ACCESS_TOKEN: '${{ secrets.MY_ACCESS_TOKEN }}'
        run: |-
          ACCESS_TOKEN=$(gcloud auth print-access-token)
          docker login -u oauth2accesstoken --password-stdin https://${{ env.REGION }}-docker.pkg.dev  <<< $ACCESS_TOKEN
          docker build -t "asia-northeast3-docker.pkg.dev/poetic-inkwell-401203/mangohub/mango:${{ github.sha }}" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/mango:${{ github.sha }}"
        # END - Docker auth and build


      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          service: ${{ env.DEPLOYMENT }}
          region: ${{ env.REGION }}
          # NOTE: If using a pre-built image, update the image name here
          image: '${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/mango:${{ github.sha }}'

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
